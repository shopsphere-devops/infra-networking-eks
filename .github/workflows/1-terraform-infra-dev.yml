name: Terraform Infra

on:
  workflow_dispatch:
  push:
    paths:
      - 'infra-terraform/envs/dev/infra/**'

jobs:
  infra:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout infra-terraform
        uses: actions/checkout@v4
        with:
          path: infra-terraform

      - name: Configure AWS credentials from OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::246412345195:role/github-actions-deploy-role
          aws-region: us-east-1

      - name: Confirm AWS Credentials
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          cd infra-terraform/envs/dev/infra
          terraform init

      - name: Terraform rm ACM
        run: |
          cd infra-terraform/envs/dev/infra
          terraform state rm module.acm.aws_acm_certificate.this
          terraform state rm module.acm.aws_route53_record.validation
          exit 0

      - name: Terraform Import Secret (idempotent for dev)
        run: |
          cd infra-terraform/envs/dev/infra
          terraform import 'module.rds.aws_secretsmanager_secret.db' arn:aws:secretsmanager:us-east-1:246412345195:secret:shopsphere-dev-db-credentials-SQgjt1 || true

      - name: Confirm Terraform Secret Import
        run: |
          cd infra-terraform/envs/dev/infra
          terraform state list | grep module.rds.aws_secretsmanager_secret.db

      - name: Terraform Format Check
        run: |
          cd infra-terraform/envs/dev/infra
          terraform fmt -check -recursive

      - name: Terraform Validate
        run: |
          cd infra-terraform/envs/dev/infra
          terraform validate

      - name: Terraform Plan
        run: |
          cd infra-terraform/envs/dev/infra
          terraform plan -out=infra.tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          cd infra-terraform/envs/dev/infra
          terraform apply -auto-approve infra.tfplan

      - name: Get Terraform Outputs
        run: |
          cd infra-terraform/envs/dev/infra
          terraform output -json > tf-outputs-infra.json

      - name: Install Go yq
        run: |
            sudo wget https://github.com/mikefarah/yq/releases/download/v4.44.1/yq_linux_amd64 -O /usr/bin/yq
            sudo chmod +x /usr/bin/yq

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Checkout GitOps repo
        uses: actions/checkout@v4
        with:
          repository: shopsphere-devops/gitops-config
          path: gitops-config
          token: ${{ secrets.GITOPS_REPO_TOKEN }}

      - name: Extract ACM ARN from Terraform Outputs
        id: acm
        run: |
          ACM_CERT_ARN=$(jq -r '.acm_cert_arn.value' infra-terraform/envs/dev/infra/tf-outputs-infra.json)
          echo "acm_cert_arn=$ACM_CERT_ARN" >> $GITHUB_OUTPUT

      - name: Render argocd-ingress.yaml from template
        run: |
          export ACM_CERT_ARN="${{ steps.acm.outputs.acm_cert_arn }}"
          envsubst < gitops-config/app/dev/cluster-config/argocd-ingress.yaml.tpl > gitops-config/app/dev/cluster-config/argocd-ingress.yaml

      # (Optional) Upload outputs as artifact for downstream workflows
      - name: Upload Infra Outputs
        uses: actions/upload-artifact@v4
        with:
          name: infra-outputs
          path: infra-terraform/envs/dev/infra/tf-outputs-infra.json

      - name: Check for rds_endpoint in Terraform Outputs
        run: |
          cd infra-terraform/envs/dev/infra
          grep rds_endpoint tf-outputs-infra.json

      - name: Update Helm values.yaml
        run: |
          cd infra-terraform/envs/dev/infra
          RDS_ENDPOINT=$(jq -r '.rds_endpoint.value' tf-outputs-infra.json)
          cd ../../../..
          cd gitops-config/app/dev/apps/catalog
          yq e ".database.host = \"$RDS_ENDPOINT\"" -i values-db.yaml

      - name: Commit and Push DB endpoint
        run: |
          cd gitops-config
          git config user.name "abinash.sethi"
          git config user.email "abinash.sethi@gmail.com"
          git add app/dev/apps/catalog/values-db.yaml
          git commit -m "Update DB endpoint from Terraform output" || true
          git push

      - name: Commit and Push ACM ARN in ArgoCD Ingress
        run: |
          cd gitops-config
          git config user.name "abinash.sethi"
          git config user.email "abinash.sethi@gmail.com"
          git add app/dev/cluster-config/argocd-ingress.yaml
          git commit -m "Update ACM ARN in ArgoCD Ingress from Terraform output" || true
          git push
